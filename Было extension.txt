const express = require('express');
const multer = require('multer');
const path = require('path');
const fs = require('fs');
const { v4: uuidv4 } = require('uuid');
const axios = require('axios');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 3000;

let extension;

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
if (!fs.existsSync('storage')) {
    fs.mkdirSync('storage');
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Multer –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const storage = multer.diskStorage({
    destination: (req, file, cb) => {
        cb(null, 'storage/');
    },
    filename: (req, file, cb) => {
        const uniqueName = `${uuidv4()}${path.extname(file.originalname)}`; //—Ç–∞–∫ .jpg
        //const uniqueName = uuidv4(); // ‚Üê –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è!
        cb(null, uniqueName);
    }
});

const upload = multer({
    storage: storage,
    limits: {
        fileSize: 10 * 1024 * 1024, // 10MB –ª–∏–º–∏—Ç
    },
    fileFilter: (req, file, cb) => {
        const allowedTypes = /jpeg|jpg|png|gif|bmp|webp/;
        const extname = allowedTypes.test(path.extname(file.originalname).toLowerCase());
        const mimetype = allowedTypes.test(file.mimetype);

        if (mimetype && extname) {
            return cb(null, true);
        } else {
            cb(new Error('–†–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'));
        }
    }
});

// Middleware
app.use('/css', express.static(path.join(__dirname, 'css')));
app.use('/js', express.static(path.join(__dirname, 'js')));
app.use('/img', express.static(path.join(__dirname, 'img')));
app.use('/storage', express.static(path.join(__dirname, 'storage')));

app.use(express.urlencoded({ extended: true }));

// –ú–∞—Ä—à—Ä—É—Ç—ã
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
//–±–µ–∑ –∫–∞–ø—á–∏
app.post('/upload', upload.single('image'), (req, res) => {
    try {
        if (!req.file) {
            return res.status(400).send('–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω');
        }

        // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        //res.redirect(`/${req.file.filename}`);

        const path = require('path'); // ‚Üê —É–±–µ–¥–∏—Å—å, —á—Ç–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: "abc123.jpg"
        const fullFilename = req.file.filename;
        // –†–∞–∑–±–∏—Ä–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
        const parsed = path.parse(fullFilename);
        //const fileId = parsed.name;     // ‚Üí "abc123"
        extension = parsed.ext;         // ‚Üí ".jpg" (—Å —Ç–æ—á–∫–æ–π!)
        // –∏–ª–∏, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –±–µ–∑ —Ç–æ—á–∫–∏:
        //const ext = parsed.extension.replace(/^\./, ''); // ‚Üí "jpg"


        // ‚úÇÔ∏è –û–±—Ä–µ–∑–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è URL
        const fileId = req.file.filename.replace(/\.[^/.]+$/, ""); // ‚Üê —É–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
        res.redirect(`/${fileId}`); // ‚Üê —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —á–∏—Å—Ç—ã–π ID

    } catch (error) {
        res.status(500).send('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ' + error.message);
    }
});


//—Å –∫–∞–ø—á–µ–π
/*app.post('/upload', upload.single('image'), async (req, res) => {
    try {
        // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–∫–µ–Ω reCAPTCHA
        const recaptchaResponse = req.body['g-recaptcha-response'];
        if (!recaptchaResponse) {
            return res.status(400).send('Captcha token missing. Please enable JavaScript and try again.');
        }

        // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ Google
        const secretKey = process.env.RECAPTCHA_SECRET_KEY;
        if (!secretKey) {
            console.error('‚ùå RECAPTCHA_SECRET_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env');
            return res.status(500).send('Server misconfiguration');
        }

        const verifyUrl = `https://www.google.com/recaptcha/api/siteverify?secret=${encodeURIComponent(secretKey)}&response=${encodeURIComponent(recaptchaResponse)}`;

        let captchaData;
        try {
            const response = await axios.post(verifyUrl);
            captchaData = response.data;
        } catch (err) {
            console.error('reCAPTCHA verification failed:', err.message);
            return res.status(500).send('Captcha service unavailable. Please try again later.');
        }

        // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º score (–¥–ª—è v3)
        if (!captchaData.success || captchaData.score < 0.5) {
            console.log('‚ö†Ô∏è –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å, score:', captchaData.score);
            return res.status(400).send('Captcha verification failed. You may be a bot.');
        }

        // ‚úÖ –ö–∞–ø—á–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ ‚Äî —Ç–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª
        if (!req.file) {
            return res.status(400).send('–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω');
        }

        // üéâ –†–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ñ–∞–π–ª–∞
        res.redirect(`/${req.file.filename}`);

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:', error);
        res.status(500).send('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ' + error.message);
    }
});*/




// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä—è–º—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ñ–∞–π–ª—ã –≤ storage/v/
app.get('/i/:filename', (req, res) => {
    const filename = req.params.filename + extension;
    const filePath = path.join(__dirname, 'storage', filename);
    
    if (fs.existsSync(filePath)) {
        const stats = fs.statSync(filePath);
        const fileUrl = `${req.protocol}://${req.get('host')}/i/${filename}`;
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–º–µ—Å—Ç–æ —Ñ–∞–π–ª–∞
        res.send(generateHtmlPage(filename, stats, fileUrl, req));
    } else {
        res.status(404).send('File not found');
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function generateHtmlPage(filename, stats, fileUrl, req) {

    return `
        

        <!DOCTYPE html>
        <html lang="en">

        <head>
            <meta charset="utf-8" />
            <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
            <title>Gecko ‚Äì –∞–Ω–æ–Ω–∏–º–Ω—ã–π —Ñ–æ—Ç–æ—Ö–æ—Å—Ç–∏–Ω–≥ —Å –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–æ–π –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö</title>
            <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0, shrink-to-fit=no' name='viewport' />
            <!-- CSS Files -->
            <link href="/css/bootstrap.css" rel="stylesheet">
            <link href="/css/font-awesome.min.css" rel="stylesheet">
            <link href="/css/drunken-parrot.css" rel="stylesheet">
            <link href="/css/app.css" rel="stylesheet">
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
            <!--[if lt IE 9]>
            <script src="js/html5shiv.js"></script>
            <![endif]-->
        </head>

        <body>
        
            <div class="app-page app-page-public">
                
                <div class="wrapper">

                                    <div class="row">
                            <div style="text-align:center;" class="text-center col-sm-8 col-sm-offset-2">
                                <img style="margin-bottom: 20px; max-width: 100%;" src="/storage/${filename}">
                            </div>
                        </div>

                                    
                    <div class="container">
                        <div class="row">
                            <div class="col-sm-4 col-sm-offset-4">
                                <div class="panel panel-info btc-donate-panel">
                                    <div class="panel-heading">
                                        <h3 class="panel-title">Bitcoin donations are welcome!</h3>
                                    </div>
                                    <div class="panel-body">
                                        BTC Address: <strong>bc1q3p87fqtj84dmcy6u6jyaefjft67qyjh8ccmuc7</strong>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <footer class="footer footer-default">
                        <div class="container">
                            <div class="copyright">
                                ¬©
                                <script>
                                    document.write(new Date().getFullYear())
                                </script>, All rights reserved. </div>
                        </div>
                    </footer>
                </div>
            </div>

        </body>
        <script src="/js/jquery-1.12.4.min.js" type="text/javascript"></script>
            <script src="/js/bootstrap.min.js" type="text/javascript"></script>
            <script src="/js/bootstrap-switch.js" type="text/javascript"></script>
            <script src="/js/checkbox.js" type="text/javascript"></script>
            <script src="/js/radio.js" type="text/javascript"></script>
            <script src="/js/toolbar.js" type="text/javascript"></script>
            <script src="/js/app.js" type="text/javascript"></script>
        </html>
    `;
}


// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è)
app.get('/:filename', (req, res) => {
    const filename = req.params.filename + extension;
    const filePath = path.join(__dirname, 'storage', filename);
    
    if (fs.existsSync(filePath)) {
        const stats = fs.statSync(filePath);
        const fileUrl = `${req.protocol}://${req.get('host')}/storage/v/${filename}`;
        
        // –°—Ç–∏–ª–∏, –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ gekkk.co
        const html = `
            <!DOCTYPE html>
            <html lang="en">

            <head>
                <meta charset="utf-8" />
                <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
                <title>Gecko ‚Äì –∞–Ω–æ–Ω–∏–º–Ω—ã–π —Ñ–æ—Ç–æ—Ö–æ—Å—Ç–∏–Ω–≥ —Å –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–æ–π –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö</title>
                <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0, shrink-to-fit=no' name='viewport' />
                <!-- CSS Files -->
                <link href="/css/bootstrap.css" rel="stylesheet">
                <link href="/css/font-awesome.min.css" rel="stylesheet">
                <link href="/css/drunken-parrot.css" rel="stylesheet">
                <link href="/css/app.css" rel="stylesheet">
                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
                <!--[if lt IE 9]>
                <script src="js/html5shiv.js"></script>
                <![endif]-->
            </head>

            <body>
            
            <!--     <div class="app-page app-page-public">
                    
                    <div class="wrapper"> -->

                            <div class="row">
                    <div class="alert alert-info" role="alert">
                      <div class="container">
                        <div class="alert-icon"><i class="now-ui-icons objects_support-17"></i></div>
                        <span>Image has downloaded successfully: http://localhost:${PORT}/${filename} </span>
                        
                        <!-- <a href="/">–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç</a> -->
                        <a href="/">Back to mainpage</a>
                      </div>
                    </div>
                </div>
            
            
            
                
                    <div class="row">
                        <div class="col-sm-8 col-sm-offset-2">

                            <a target="_blank" href="/i/${filename}" alt="${filename}"><img style="margin-bottom: 20px; max-width: 100%" 
                                            src="/storage/${filename}"></a>
                        </div>
                    </div>

		    <div class="adm__img-data-url">
                          <p>URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ—Ç–¥–µ–ª—å–Ω–æ:</p>
                        <div style="margin-bottom: 6px;" class="adm__img-data-url-item">1: <code>http://localhost:${PORT}/i/${fileId}</code></div>
                        </div>

                    
                
                
            
            
            <div class="container">
                <div class="row">
                    <div class="col-sm-4 col-sm-offset-4">
                        <div class="panel panel-info btc-donate-panel">
                            <div class="panel-heading">
                                <h3 class="panel-title">Bitcoin donations are welcome!</h3>
                            </div>
                            <div class="panel-body"><strong>bc1q3p87fqtj84dmcy6u6jyaefjft67qyjh8ccmuc7</strong></div>
                        </div>
                    </div>
                </div>
            </div>

            <footer class="footer footer-default">
                <div class="container">
                    <div class="copyright">
                        ¬©
                        <script>
                            document.write(new Date().getFullYear())
                        </script>, All rights reserved. </div>
                </div>
            </footer>
            <!--         </div>
                </div> -->

            </body>
            <script src="/js/jquery-1.12.4.min.js" type="text/javascript"></script>
                <script src="/js/bootstrap.min.js" type="text/javascript"></script>
                <script src="/js/bootstrap-switch.js" type="text/javascript"></script>
                <script src="/js/checkbox.js" type="text/javascript"></script>
                <script src="/js/radio.js" type="text/javascript"></script>
                <script src="/js/toolbar.js" type="text/javascript"></script>
                <script src="/js/app.js" type="text/javascript"></script>
            </html>
        `;
        
        res.send(html);
    } else {
        res.status(404).send('File not found');
    }
});


app.get('/storage/:id', (req, res) => {
    const fileId = req.params.id;
    const possibleExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp'];
    let filePath = null;

    // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Å –ª—é–±—ã–º –∏–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
    for (const ext of possibleExtensions) {
        const candidatePath = path.join(__dirname, 'storage', fileId + ext);
        if (fs.existsSync(candidatePath)) {
            filePath = candidatePath;
            break;
        }
    }

    if (!filePath) {
        return res.status(404).send('File not found');
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º MIME-—Ç–∏–ø (–º–æ–∂–Ω–æ –∏ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é, –∏ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É)
    const mimeType = getMimeType(filePath);
    res.setHeader('Content-Type', mimeType);
    res.sendFile(filePath);
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è MIME-—Ç–∏–ø–∞
function getMimeType(filePath) {
    const ext = path.extname(filePath).toLowerCase().replace('.', '');

    const mimeTypes = {
        'jpg': 'image/jpeg',
        'jpeg': 'image/jpeg',
        'png': 'image/png',
        'gif': 'image/gif',
        'bmp': 'image/bmp',
        'webp': 'image/webp'
    };

    return mimeTypes[ext] || 'application/octet-stream';
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ Multer
app.use((error, req, res, next) => {
    if (error instanceof multer.MulterError) {
        if (error.code === 'LIMIT_FILE_SIZE') {
            return res.status(400).send('File too large (max 10MB)');
        }
    }
    res.status(500).send('Error: ' + error.message);
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
    console.log(`üöÄ Server running on http://localhost:${PORT}`);
});